#! /bin/bash

set -eu

lapt_dir=$(dirname $(readlink -f $0))
ldpkg=$lapt_dir/ldpkg

function pu_extract_pkg_name() {
    # Usage:
    #   pu_extract_pkg_name libtiff5
    #   pu_extract_pkg_name " libtiff5 (= 4.0.9-5ubuntu0.3) "
    local pkg_name_with_version=$1
    # TODO: "|" が含まれてたらエラーを吐く
    local pkg_name=$(echo "$pkg_name_with_version" |
                             sed -e 's/(.*)//' |
                             sed -e 's/^ *//' |
                             sed -e 's/ *$//')
    echo $pkg_name
}

function pu_list_real_pkg() {
    # Usage:
    #   pu_list_real_pkg httpd
    #   pu_list_real_pkg " libtiff5 (= 4.0.9-5ubuntu0.3) "
    # Output:
    #   newline-separated list of real packages
    # Reference:
    #   https://serverfault.com/questions/364608/how-do-i-get-a-list-of-packages-that-provides-something-using-dpkg
    local pkg_name_with_version=$1
    local pkg_name=$(pu_extract_pkg_name "$pkg_name_with_version")
    if apt-cache show $pkg_name | grep "^Package: $pkg_name" > /dev/null 2> /dev/null; then
        # $pkg_name 自身が
        # real な (i.e. virtual でない) パッケージの場合
        echo $pkg_name
    fi
    # $pkg_name を Provide するパッケージの一覧
    # これって再帰的にやる必要ある？
    apt-cache showpkg $pkg_name |
        awk '/Pa/, /Reverse P/ {next} {print $1 | "sort -u"}'
}

function pu_split_pkg_candidates() {
    # Usage:
    #   pu_split_pkg_candidates " foo (= 1.1.2) | bar "
    # Output:
    #   newline-separated list of package names
    local pkg_candidates=$1
    local -a pkg_array
    # https://stackoverflow.com/questions/918886/how-do-i-split-a-string-on-a-delimiter-in-bash
    IFS='|' read -ra pkg_array <<< "$pkg_candidates"
    # TODO: こっちも package_array が定義されてるかチェックする？
    for pkg_with_version in "${pkg_array[@]}"; do
        # TODO: version を取り除くかどうかは，オプションで指定できた方が良い？
        pu_extract_pkg_name "$pkg_with_version"
    done
}

function pu_is_installed() {
    # Usage:
    #   pu_is_installed " foo (= 1.1.2) | bar "
    local pkg_candidates=$1
    for pkg_name in $(pu_split_pkg_candidates "$pkg_candidates"); do
        for real_pkg_name in $(pu_list_real_pkg $pkg_name); do
            if $ldpkg is_installed $real_pkg_name; then
                return 0
            fi
        done
    done
    return 1
}

command=$1
shift
pu_"$command" "$@"
